/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    withName: '.*GENS_PON.*' {
        publishDir = [
            enabled: false
        ]
    }

    withName: '.*GENS_PON:SAMTOOLS_FAIDX' {
        ext.when = { params.fai.equals(null) }
        publishDir = [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/gens_pon/references" },
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: '.*GENS_PON:PICARD_CREATESEQUENCEDICTIONARY' {
        ext.when = { params.dict.equals(null) }
        publishDir = [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/gens_pon/references" },
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: '.*GENS_PON:GATK4_PREPROCESSINTERVALS' {
        ext.args = { ["--imr OVERLAPPING_ONLY",
                        "--bin-length ${params.gens_bin_length}"].join(" ")
                    }
        publishDir = [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/gens_pon/intervals" },
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: '.*GENS_PON:GATK4_COLLECTREADCOUNTS' {
        ext.args = {"--format ${params.gens_readcount_format} --imr OVERLAPPING_ONLY"}
        publishDir = [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/gens_pon/readcounts" },
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: '.*GENS_PON:GATK4_CREATEREADCOUNTPANELOFNORMALS' {
        ext.args   = { ["--minimum-interval-median-percentile ${params.gens_min_interval_median_percentile}",
                        "--maximum-chunk-size ${params.gens_maximum_chunk_size}"].join(" ")}
        publishDir = [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/gens_pon/createreadcountpanelofnormals" },
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

}
